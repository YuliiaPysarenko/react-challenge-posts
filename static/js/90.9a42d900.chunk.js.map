{"version":3,"file":"static/js/90.9a42d900.chunk.js","mappings":"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","sources":["components/CommentForm/index.js","pages/OnePostPage.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { postsOperations } from \"../../redux/posts\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\nimport { Form, Button, Card } from \"react-bootstrap\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction CommentForm({ postId, onSubmit }) {\r\n  const user = useSelector(authSelectors.selectUser);\r\n  const [commentFields, setCommentFields] = useState({\r\n    postId,\r\n    name: \"\",\r\n    body: \"\",\r\n    email: user.email\r\n  });\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setCommentFields({ ...commentFields, [name]: value });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(commentFields);\r\n    reset();\r\n  };\r\n\r\n  function reset() {\r\n    setCommentFields({\r\n      name: \"\",\r\n      body: \"\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Card className=\"p-5 mb-3\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label htmlFor={\"title\"}>Title</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={commentFields.name}\r\n            id={\"name\"}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label htmlFor={\"body\"}>Body</Form.Label>\r\n          <Form.Control\r\n            type=\"textarea\"\r\n            name=\"body\"\r\n            value={commentFields.body}\r\n            id={\"body\"}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\">Add Comment</Button>\r\n      </Form>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSubmit: (data) => {\r\n      dispatch(postsOperations.addComment(data));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(CommentForm);\r\n\r\nCommentForm.propTypes = {\r\n  postId: PropTypes.number,\r\n  onSubmit: PropTypes.func\r\n}","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { postsOperations, postsSelectors } from \"../redux/posts\";\r\n\r\nimport CommentForm from \"../components/CommentForm\";\r\nimport { Button, Container, Card } from \"react-bootstrap\";\r\n\r\nexport default function OnePostPage() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  let { postId } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(postsOperations.getOnePost(postId));\r\n  }, [dispatch, postId]);\r\n\r\n  const post = useSelector(postsSelectors.getChosenPost);\r\n\r\n  const formSubmitHandler = async (data) => {\r\n    dispatch(postsOperations.addComment(data))\r\n  };\r\n\r\n  const onDelete = async (postId) => {\r\n    dispatch(postsOperations.deletePost(postId)).then(() => {\r\n      navigate(\"/posts\");\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"mb-5\">\r\n        <h1 className=\"mb-4\">{post.title}</h1>\r\n        <Card bg={\"info\"}>\r\n          <Card.Body className=\"p-4\">\r\n            <Card.Text style={{ fontSize: \"1.5rem\" }}>{post.body}</Card.Text>\r\n            <Container style={{textAlign: \"right\"}}>\r\n              <Button size=\"lg\" variant=\"info\" onClick={() => navigate(`/posts/${postId}/edit`)}>Edit post</Button>\r\n              <Button size=\"lg\" variant=\"danger\" onClick={() => onDelete(postId)}>Remove post</Button>\r\n            </Container>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n\r\n      <Container>\r\n        <div className=\"justify-content-between row row-cols-auto mb-3\">\r\n          <h2>Comments</h2>\r\n        </div>\r\n        <div>\r\n          <CommentForm postId={Number(postId)} onSubmit={formSubmitHandler} />\r\n        </div>\r\n        {post.comments && post.comments.length > 0 ? (\r\n          post.comments.map((comment) => (\r\n            <Card key={comment.id} className=\"mb-3\">\r\n              <Card.Header>{comment.email}</Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>{comment.name}</Card.Title>\r\n                <Card.Text>{comment.body}</Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          ))\r\n        ) : (\r\n          <p>There are no comments for this post yet.</p>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["connect","dispatch","onSubmit","data","postsOperations","_ref","postId","user","useSelector","authSelectors","_useState","useState","name","body","email","_useState2","_slicedToArray","commentFields","setCommentFields","handleChange","e","_e$target","target","value","_objectSpread","_defineProperty","_jsx","Card","className","children","_jsxs","Form","preventDefault","htmlFor","type","id","onChange","required","Button","OnePostPage","useDispatch","navigate","useNavigate","useParams","useEffect","post","postsSelectors","formSubmitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","_x","apply","arguments","onDelete","_ref2","_callee2","_context2","then","_x2","_Fragment","Container","title","bg","style","fontSize","textAlign","size","variant","onClick","concat","CommentForm","Number","comments","length","map","comment","CardImg","React","ref","bsPrefix","_ref$as","as","Component","props","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","text","border","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}